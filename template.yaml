AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  Deploying yggdrasil to lambda

Globals:
  Function:
    Timeout: 30
    MemorySize: 1024
    Tracing: Active

Resources:
  YggdrasilECRRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: yggdrasil-repo
      LifecyclePolicy:
        LifecyclePolicyText: |
          {
            "rules": [
              {
                "rulePriority": 1,
                "description": "Keep last 30 images",
                "selection": {
                  "tagStatus": "any",
                  "countType": "imageCountMoreThan",
                  "countNumber": 30
                },
                "action": {
                  "type": "expire"
                }
              }
            ]
          }

  YggdrasilFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      ImageConfig:
        Command: ["run.sh"]
      Architectures:
        - x86_64
      Events:
        HttpApiEvent:
          Type: HttpApi
          Properties:
            PayloadFormatVersion: "2.0"
      Environment:
        Variables:
          NODE_ENV: production
          PORT: 3000
          AWS_LWA_ENABLE_COMPRESSION: "true"
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: .
      DockerTag: latest

Outputs:
  WebEndpoint:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessHttpApi}.execute-api.${AWS::Region}.amazonaws.com/"
  ECRRepositoryUri:
    Description: "ECR Repository URI"
    Value: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${YggdrasilECRRepository}
